AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  Bucket:
    Type: String
  
  Key:
    Type: String
    
  Topic:
    Type: String

Resources:

  SharedDependenciesLayer:
      Type: AWS::Serverless::LayerVersion
      Properties:
          LayerName: aws-services-scraper-shared-dependencies
          ContentUri: shared/
          CompatibleRuntimes:
            - python2.7
          RetentionPolicy: Retain

  PublisherRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        -
          PolicyName: PublisherPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              -
                Effect: Allow
                Action:
                   - s3:PutObject
                   - s3:PutObjectAcl
                Resource: !Sub 'arn:aws:s3:::${Bucket}/${Key}' 

  Publisher:
    Type: AWS::Serverless::Function
    Properties:
      Handler: function.lambda_handler
      Runtime: python2.7
      CodeUri: ./publish
      Layers:
        - !Ref SharedDependenciesLayer
      Timeout: 60
      Role: !GetAtt [PublisherRole, Arn]
      Environment:
        Variables:
          bucket: !Ref Bucket
          key: !Ref Key
 
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref Topic
      FunctionName: !GetAtt Publisher.Arn
      
  TopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt Publisher.Arn 
      Protocol: lambda
      TopicArn: !Ref Topic      